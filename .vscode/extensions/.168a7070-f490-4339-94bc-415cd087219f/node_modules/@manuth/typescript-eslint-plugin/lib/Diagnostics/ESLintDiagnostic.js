"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ESLintDiagnostic = void 0;
const Diagnostic_1 = require("./Diagnostic");
/**
 * Represents a diagnostic which provides information about an `eslint` failure.
 */
class ESLintDiagnostic extends Diagnostic_1.Diagnostic {
    /**
     * Initializes a new instance of the `ESLintDiagnostic`.
     *
     * @param plugin
     * The plugin of the diagnostic.
     *
     * @param file
     * The file of the diagnostic.
     *
     * @param lintMessage
     * The lint failure.
     */
    constructor(plugin, file, lintMessage) {
        super(plugin, file);
        this.lintMessage = lintMessage;
    }
    /**
     * Gets the lint failure.
     */
    get LintMessage() {
        return this.lintMessage;
    }
    /**
     * @inheritdoc
     */
    get Category() {
        let result;
        if (this.Config.AlwaysShowRuleFailuresAsWarnings) {
            result = this.TypeScript.DiagnosticCategory.Warning;
        }
        else {
            switch (this.LintMessage.severity) {
                case 2:
                    result = this.TypeScript.DiagnosticCategory.Error;
                    break;
                case 1:
                default:
                    result = this.TypeScript.DiagnosticCategory.Warning;
                    break;
            }
        }
        return result;
    }
    /**
     * @inheritdoc
     */
    get Range() {
        return {
            start: {
                line: this.LintMessage.line - 1,
                character: this.LintMessage.column - 1
            },
            end: {
                line: this.LintMessage.endLine - 1,
                character: this.LintMessage.endColumn - 1
            }
        };
    }
    /**
     * @inheritdoc
     */
    get Message() {
        let result = `${this.LintMessage.message}`;
        if (this.LintMessage.ruleId) {
            result = `${result} (${this.LintMessage.ruleId})`;
        }
        return result;
    }
}
exports.ESLintDiagnostic = ESLintDiagnostic;
//# sourceMappingURL=ESLintDiagnostic.js.map